<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABEtJREFUeF7t
        m8trE1EUxoviu6go1urGhUVRC/4D4k4FkaqLuBDFQkuSdlJooRtBIQsRcSGK4gMf+N4XNz4WuhJaBNGF
        Uq1adaHFR9FWWmtBvwOnMFxuapKZzCS53w8+mpCZc879ZubeOzO3NYQQQgghhBBCCCGEEEIIIeVCZ2fn
        4nQ6vb+tre0a1Nfe3v4Zf7+L9HMvdBXaJ9vqbiQonudtgKk3oDHob56Sba+nUqn1GoYUCs7qWug0jJz0
        GVuoJhHjVDKZnK9hST7AuLXQC5+RQdWHg7BCw5PpQLexEYYNGQYGFsaPj1CjpiE20F006IBqNTEEfUD8
        ek1H/HR0dCyEQa8Mw0qhp93d3Qs0LZkC3cMJi1klEXId0bREgCky6P7xm1RijXJQ9oF++bLFpFLrnKZ3
        G7lrhRmF3GSFpTFcBYu0DHeBEXsNYyITxoI9Woa7wIhLpjFRCV3feS3DXWDEE9OYCNWrZbgLTPhimBKl
        hrQMd4EJvw1TotS4luEuMGHCMCVK8QDABHZBcQIT5E2WzZySC7Ogx1qGu8AITkPjBEbwRixO5NEwzBgx
        zYlAP/mqUonpYdxFTU9gRtSPoydw9q/W9ESI8oUMdFzTkikSicRsGPPIMKoUeoizf5amJX48z1sKgwYM
        w8LUgOTQdMQGuqJGGPXeMC4MDUpsTUOmo6WlZQkMe2AYWLQwy7ovMTU8yQcZE3DGHoaBQe4RxmB+ln1+
        ADKZzEoYKY8rCl2cewX9/SoNQ4KSY3m6LNyVBbhcnk4IIYSQCgaznDpZpq5fQ0eWIiL+Mv1KhK6urnmY
        RjZj+nhPppQyjdSfQkensfLY+y50oLm5ea7+5B4wvR4mHIO+Qv6bqAu6Seggtvn+WVZkHG1tbV2um1Q/
        8hoQjT4E5XrE8E220c1DQ199Dhu5pvQDOihXo25enaAL2IGGvvM1PJeSuktoIDfCWnP59SaVSm3XXaoH
        GVhhwG1Lg3NpKMzBUroYxMx7ARi6x5tQre5e2cB4eb7fbzYyD/UkEomZGqZoJAZi3TFi/1c4AC+hdRqm
        MkFDdkGj/oYVIjkTs9nsDA1XMLIv4twy4xagEc/zdmq4ygJn/m40IIyVDj3FdEfIX4d9Cz7zLZLFw00a
        tjJA47eh6HFfI4LqE2Km8nmxIttg+zSunjD/4Xscg/MWTVHe4JLdjIJ/GQ0IS29xIE7ibxPyrJEbKZF8
        lq5Cf8tnllWMRnFQN2kzyxMU2IBCc821q0HDuMLKc0GX3DzhDHxuKbra9KwUN4qBQWFnjUKrWWe02eWB
        Drq2QqtW6G63avPjBVPEOSjotVmgA+qXpTNqQ3zg7M9YinNFntoQHyhi0CjKJQ2qDfFhKcopqQ3xYSvK
        JakN8WEryiWpDfFhK8olqQ3xYSvKJakN8WEryiWpDfFhK8olqQ3xYSvKJakN8WEryiWpDYQQQgghhBBC
        CCGEEEIIITmoqfkH+MJzoQFP9RoAAAAASUVORK5CYII=
</value>
  </data>
</root>